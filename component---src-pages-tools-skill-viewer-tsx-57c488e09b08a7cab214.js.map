{"version":3,"file":"component---src-pages-tools-skill-viewer-tsx-57c488e09b08a7cab214.js","mappings":"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","sources":["webpack://gw2-rotation-planner/./src/pages/tools/skill-viewer.tsx","webpack://gw2-rotation-planner/./node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","webpack://gw2-rotation-planner/./node_modules/@emotion/css/dist/emotion-css.esm.js","webpack://gw2-rotation-planner/./node_modules/@mui/system/esm/Container/createContainer.js","webpack://gw2-rotation-planner/./node_modules/@mui/material/esm/Container/Container.js"],"sourcesContent":["import React, {useMemo, useState} from \"react\";\nimport {Container, Stack, Card, TextField, Typography} from \"@mui/material\";\nimport {css} from \"@emotion/css\";\nimport {CustomComponent} from \"@discretize/gw2-ui-new\";\nimport {Layout, SEO} from \"../../components/layout\";\n\nconst initialJson = `{\n  \"name\": \"Custom Skill\",\n  \"professions\": [],\n  \"description\": \"Does nothing.\",\n  \"icon\": \"https://wiki.guildwars2.com/images/5/5f/Monster_Skill.png\",\n  \"categories\": [],\n  \"facts\": [\n    {\n      \"text\": \"Recharge\",\n      \"type\": \"Recharge\",\n      \"icon\": \"https://render.guildwars2.com/file/D767B963D120F077C3B163A05DC05A7317D7DB70/156651.png\",\n      \"value\": 10\n    }\n  ]\n}`;\n\nconst title = \"Skill Viewer\";\n\nconst SkillViewer = (): JSX.Element => {\n    const [json, setJson] = useState(initialJson);\n    const data = useMemo(() => {\n        try {\n            return JSON.parse(json);\n        } catch {\n            return null;\n        }\n    }, [json]);\n\n    const isValid = data && data.name && data.icon && data.professions;\n\n    return (\n        <Layout title={title}>\n            <Container sx={{marginY: 2}}>\n                <Card sx={{padding: 2}}>\n                    <Stack direction=\"column\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={1} padding={2}>\n                            <Typography>Preview:</Typography>\n                            {isValid ? (\n                                <CustomComponent\n                                    type=\"Skill\"\n                                    data={data}\n                                    disableText\n                                    className={css`font-size: 3em`}\n                                />\n                            ) : (\n                                <Typography color=\"error\">Invalid JSON.</Typography>\n                            )}\n                        </Stack>\n                        <TextField\n                            value={json}\n                            error={!isValid}\n                            onChange={({target}) => setJson(target.value)}\n                            multiline\n                            fullWidth\n                            rows={24}\n                            inputProps={{\n                                style: {\n                                    whiteSpace: \"nowrap\",\n                                    fontFamily: \"Source Code Pro, monospace\"\n                                }\n                            }}\n                        />\n                    </Stack>\n                </Card>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default SkillViewer;\n\nexport const Head = (): JSX.Element => <SEO title={title}/>;\n","import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options);\n\n  cache.sheet.speedy = function (value) {\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport { createEmotion as default };\n","import createEmotion from '../create-instance/dist/emotion-css-create-instance.esm.js';\nimport '@emotion/cache';\nimport '@emotion/serialize';\nimport '@emotion/utils';\n\nvar _createEmotion = createEmotion({\n  key: 'css'\n}),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    cache = _createEmotion.cache;\n\nexport { cache, css, cx, flush, getRegisteredStyles, hydrate, injectGlobal, keyframes, merge, sheet };\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["title","SkillViewer","json","setJson","useState","data","useMemo","JSON","parse","isValid","name","icon","professions","React","Layout","Container","sx","marginY","Card","padding","Stack","direction","alignItems","spacing","Typography","CustomComponent","type","disableText","className","css","color","TextField","value","error","onChange","_ref","target","multiline","fullWidth","rows","inputProps","style","whiteSpace","fontFamily","Head","SEO","insertWithoutScoping","cache","serialized","undefined","inserted","insert","sheet","merge","registered","registeredStyles","rawClassName","length","classnames","args","cls","i","arg","toAdd","Array","isArray","k","_createEmotion","options","speedy","this","isSpeedy","compat","_len","arguments","_key","key","cx","_len4","_key4","injectGlobal","_len3","_key3","keyframes","_len2","_key2","animation","styles","hydrate","ids","forEach","flush","getRegisteredStyles","bind","createEmotion","defaultTheme","createTheme","defaultCreateStyledComponent","slot","overridesResolver","props","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","createStyledComponent","componentName","ContainerRoot","theme","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","Math","max","xs","ref","component","classes","classesProp","other","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer"],"sourceRoot":""}