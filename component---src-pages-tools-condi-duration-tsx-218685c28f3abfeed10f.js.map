{"version":3,"file":"component---src-pages-tools-condi-duration-tsx-218685c28f3abfeed10f.js","mappings":"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","sources":["webpack://gw2-rotation-planner/./node_modules/@mui/system/esm/Container/createContainer.js","webpack://gw2-rotation-planner/./node_modules/@mui/material/esm/Container/Container.js","webpack://gw2-rotation-planner/./node_modules/@mui/icons-material/esm/Add.js","webpack://gw2-rotation-planner/./node_modules/@mui/icons-material/esm/Remove.js","webpack://gw2-rotation-planner/./src/util/condi-duration.ts","webpack://gw2-rotation-planner/./src/pages/tools/condi-duration.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');","export const TICK = 40;\n\nexport const toTicks = (time: number): number => Math.ceil(time / TICK) * TICK;\n\nexport const effectiveDuration = (base: number, duration: number): number => toTicks(base * (1 + duration / 100));\n\nexport const roundDurationStat = (duration: number): number => Math.ceil(duration * 100) / 100;\n\nexport const nextDurationStep = (base: number, effectiveDuration: number): number => (effectiveDuration / base - 1 + Number.EPSILON) * 100;\n\nexport const minimizeDuration = (base: number, duration: number): number => {\n    const prevDuration = effectiveDuration(base, duration) - TICK;\n    const minimized = nextDurationStep(base, prevDuration);\n    return Math.max(0, roundDurationStat(minimized));\n};\n\nexport const nextHigherDuration = (base: number, duration: number): number => {\n    const next = nextDurationStep(base, effectiveDuration(base, duration));\n    return next <= 100 ? roundDurationStat(next) : null;\n};\n","import React, {useState} from \"react\";\nimport {Container, Stack, Card, TextField, FormHelperText, InputAdornment, Typography} from \"@mui/material\";\nimport {Add, Remove} from \"@mui/icons-material\";\nimport {Layout, SEO} from \"../../components/layout\";\nimport {IconButton} from \"../../components/general\";\nimport {effectiveDuration, minimizeDuration, nextHigherDuration} from \"../../util/condi-duration\";\n\nconst title = \"Condi Duration Calculator\";\n\nconst formatMs = (ms: number) => `${new Intl.NumberFormat(\"fr\").format(ms)}ms`;\n\nconst ConditionCalculator = (): JSX.Element => {\n    const [duration, setDuration] = useState(0);\n    const durationValid = duration >= 0 && duration <= 100;\n\n    const [base, setBase] = useState(1000);\n    const baseValid = base > 0;\n\n    const valid = durationValid && baseValid;\n\n    return (\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            <TextField\n                type=\"number\"\n                label=\"Duration\"\n                value={duration}\n                error={!durationValid}\n                onChange={({target}) => setDuration(Number.parseFloat(target.value))}\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n                    inputProps: {min: 0, max: 100, step: 0.1}\n                }}\n                sx={{width: 120}}\n            />\n            <TextField\n                type=\"number\"\n                label=\"Base\"\n                value={base / 1000}\n                error={!baseValid}\n                onChange={({target}) => setBase(Number.parseFloat(target.value) * 1000)}\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n                    inputProps: {min: 0, step: 1}\n                }}\n                sx={{width: 120}}\n            />\n            {valid ? (\n                <>\n                    <Stack direction=\"column\" spacing={0.5}>\n                        <Typography>Effective duration: {formatMs(effectiveDuration(base, duration))}</Typography>\n                        <Typography>Minimized Condition Duration: {minimizeDuration(base, duration).toFixed(2)}%</Typography>\n                        <Typography>Next higher Condition Duration: {nextHigherDuration(base, duration)?.toFixed(2) ?? \"-\"}%</Typography>\n                    </Stack>\n                </>\n            ) : (\n                <Typography color=\"error\">Invalid parameters.</Typography>\n            )}\n        </Stack>\n    );\n};\n\nconst CondiDurationCalculator = (): JSX.Element => {\n    const [rows, setRows] = useState(1);\n\n    return (\n        <Layout title={title}>\n            <Container sx={{marginY: 2}}>\n                <Card sx={{padding: 2}}>\n                    <Stack direction=\"column\" spacing={2}>\n                        <FormHelperText>Insert Condition Duration attribute from Hero Panel and base durations of all applied Conditions.</FormHelperText>\n                        {Array(rows).fill(0).map((_, i) => <ConditionCalculator key={i}/>)}\n                        <Stack direction=\"row\" spacing={1}>\n                            <IconButton size=\"small\" title=\"Add Row\" onClick={() => setRows(rows + 1)}><Add/></IconButton>\n                            <IconButton size=\"small\" title=\"Remove Row\" onClick={() => setRows(Math.max(1, rows - 1))}><Remove/></IconButton>\n                        </Stack>\n                    </Stack>\n                </Card>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default CondiDurationCalculator;\n\nexport const Head = (): JSX.Element => <SEO title={title}/>;\n"],"names":["defaultTheme","createTheme","defaultCreateStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","Container","options","createStyledComponent","componentName","ContainerRoot","theme","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","ref","className","component","classes","classesProp","other","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","createSvgIcon","d","effectiveDuration","base","duration","toTicks","time","ceil","roundDurationStat","nextDurationStep","Number","EPSILON","title","ConditionCalculator","_nextHigherDuration$t","_nextHigherDuration","setDuration","useState","durationValid","setBase","baseValid","valid","React","Stack","direction","alignItems","TextField","type","label","error","onChange","_ref","target","parseFloat","InputProps","endAdornment","InputAdornment","position","inputProps","min","step","sx","_ref2","Typography","ms","Intl","NumberFormat","format","minimizeDuration","prevDuration","minimized","toFixed","nextHigherDuration","next","color","CondiDurationCalculator","rows","setRows","Layout","marginY","Card","padding","FormHelperText","Array","fill","map","_","i","key","IconButton","size","onClick","Add","Remove","Head","SEO"],"sourceRoot":""}