{"version":3,"file":"component---src-pages-tools-procs-tsx-d75037d68d5eaa5662f6.js","mappings":"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","sources":["webpack://gw2-rotation-planner/./node_modules/@mui/system/esm/Container/createContainer.js","webpack://gw2-rotation-planner/./node_modules/@mui/material/Container/Container.js","webpack://gw2-rotation-planner/./src/pages/tools/procs.tsx"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import React, {useState} from \"react\";\nimport {Container, Stack, Card, TextField, InputAdornment, Typography} from \"@mui/material\";\nimport {Layout, SEO} from \"../../components/layout\";\n\nconst title = \"Proc Calculator\";\n\nconst toTicks = (time: number, tickrate: number): number => Math.ceil(time / tickrate) * tickrate;\n\nconst ProcCalculator = (): JSX.Element => {\n    const [phase, setPhase] = useState(20);\n    const [interval, setInterval] = useState(2);\n    const [duration, setDuration] = useState(12);\n    const [tickrate, setTickrate] = useState(1);\n\n    const phaseValid = phase > 0;\n    const intervalValid = interval > 0;\n    const durationValid = duration >= 0;\n    const tickrateValid = tickrate >= 0;\n    const valid = phaseValid && intervalValid && durationValid && tickrateValid;\n\n    const singleDuration = tickrate > 0 ? toTicks(duration, tickrate) : duration;\n    let totalProcs = 0;\n    let totalDuration = 0;\n    if (valid) {\n        for (let time = 0; time < phase; time += interval) {\n            if (duration > 0) {\n                const effectiveDuration = Math.min(phase - time, duration);\n                const tickTime = tickrate > 0 ? toTicks(effectiveDuration, tickrate) : effectiveDuration;\n                totalProcs += tickTime / singleDuration;\n                totalDuration += tickTime;\n            } else {\n                totalProcs += 1;\n            }\n        }\n    }\n\n    return (\n        <Layout title={title}>\n            <Container sx={{marginY: 2}}>\n                <Card sx={{padding: 2}}>\n                    <Stack direction=\"column\" spacing={2}>\n                        <TextField\n                            type=\"number\"\n                            label=\"Phase Duration\"\n                            helperText=\"Time frame of combat to calculate procs for.\"\n                            value={phase}\n                            onChange={({target}) => setPhase(Number.parseFloat(target.value))}\n                            error={!phaseValid}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n                                inputProps: {min: 0, step: 0.1}\n                            }}\n                        />\n                        <TextField\n                            type=\"number\"\n                            label=\"Proc Interval\"\n                            helperText=\"Interval or cooldown at which the proc happens.\"\n                            value={interval}\n                            onChange={({target}) => setInterval(Number.parseFloat(target.value))}\n                            error={!intervalValid}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n                                inputProps: {min: 0, step: 0.1}\n                            }}\n                        />\n                        <TextField\n                            type=\"number\"\n                            label=\"Proc Duration\"\n                            helperText=\"Duration for a proc to take full effect. For example duration of inflicted Conditions. A duration of 0 indicates instant full effect.\"\n                            value={duration}\n                            onChange={({target}) => setDuration(Number.parseFloat(target.value))}\n                            error={!durationValid}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n                                inputProps: {min: 0, step: 0.1}\n                            }}\n                        />\n                        <TextField\n                            type=\"number\"\n                            label=\"Proc Tickrate\"\n                            helperText=\"Interval between proc ticks. For example 1s for Conditions. A tickrate of 0 indicates infinitely small tickrate.\"\n                            value={tickrate}\n                            onChange={({target}) => setTickrate(Number.parseFloat(target.value))}\n                            error={!tickrateValid}\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n                                inputProps: {min: 0, step: 0.1}\n                            }}\n                        />\n                        {valid ? (\n                            <>\n                                <Typography>Single Proc Duration: {singleDuration.toFixed(3)}s</Typography>\n                                <Typography>Effective Procs: {totalProcs.toFixed(3)}</Typography>\n                                <Typography>Total Duration: {totalDuration.toFixed(3)}s</Typography>\n                            </>\n                        ) : (\n                            <Typography color=\"error\">Invalid parameters.</Typography>\n                        )}\n                    </Stack>\n                </Card>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default ProcCalculator;\n\nexport const Head = (): JSX.Element => <SEO title={title}/>;\n"],"names":["_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","Container","options","createStyledComponent","componentName","ContainerRoot","theme","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","ref","className","component","other","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","title","toTicks","time","tickrate","ceil","ProcCalculator","phase","setPhase","useState","interval","setInterval","duration","setDuration","setTickrate","phaseValid","intervalValid","durationValid","tickrateValid","valid","singleDuration","totalProcs","totalDuration","effectiveDuration","min","tickTime","React","Layout","sx","marginY","Card","padding","Stack","direction","TextField","type","label","helperText","onChange","_ref","target","Number","parseFloat","error","InputProps","endAdornment","InputAdornment","position","inputProps","step","_ref2","_ref3","_ref4","Typography","toFixed","color","Head","SEO"],"sourceRoot":""}